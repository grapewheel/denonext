generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Address {
  id       Int    @id @default(autoincrement()) @db.UnsignedInt
  userId   Int    @db.UnsignedInt
  province String @db.VarChar(45)
  city     String @db.VarChar(45)
  district String @db.VarChar(45)
  street   String @db.VarChar(45)
  default  Int    @default(0) @db.UnsignedTinyInt
  contact  String @db.VarChar(15)
  phone    String @db.VarChar(12)
  User     User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user")

  @@index([userId], map: "user_idx")
}

model Product {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  pics        Json?
  name        String        @unique(map: "name_UNIQUE") @db.VarChar(50)
  type        Product_type  @default(goods)
  desc        String?       @db.Text
  params      Json?
  promote     Int           @default(0) @db.TinyInt
  createTime  DateTime      @default(now()) @db.DateTime(0)
  categoryId  Int?          @db.UnsignedInt
  specId      Int?          @db.UnsignedInt
  ProductCat  ProductCat?   @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "category")
  ProductSpec ProductSpec[]

  @@index([categoryId], map: "category_idx")
  @@index([specId], map: "spec_idx")
}

model ProductCat {
  id               Int          @id @default(autoincrement()) @db.UnsignedInt
  name             String       @unique(map: "name_UNIQUE") @db.VarChar(45)
  parentId         Int?         @db.UnsignedInt
  ProductCat       ProductCat?  @relation("ProductCatToProductCat_parentId", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "parent")
  Product          Product[]
  other_ProductCat ProductCat[] @relation("ProductCatToProductCat_parentId")

  @@index([parentId], map: "parent_idx")
}

model ProductSpec {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String  @db.VarChar(45)
  parentId    Int?    @db.UnsignedInt
  productId   Int     @db.UnsignedInt
  originPrice Float   @default(1) @db.Float
  pic         String? @db.VarChar(50)
  Product     Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product")

  @@index([productId], map: "product_idx")
}

model User {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  mobile        String?   @unique(map: "mobile_UNIQUE") @db.VarChar(11)
  alipayOpenId  String?   @db.VarChar(150)
  sex           User_sex  @default(unknown)
  birthday      DateTime? @db.Date
  wechatOpenId  String?   @unique(map: "wechatOpenId_UNIQUE") @db.VarChar(150)
  createTime    DateTime  @default(now()) @db.DateTime(0)
  lastLoginTime DateTime? @db.DateTime(0)
  hash          String?   @db.VarChar(32)
  code          String?   @db.VarChar(4)
  Address       Address[]
}

enum Product_type {
  goods
  service
}

enum User_sex {
  male
  female
  unknown
}
